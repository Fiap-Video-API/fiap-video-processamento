name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  code-analisys:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      - name: Run Install & Unit Tests
        run: mvn clean install 

      - name: Validate Test Coverage
        run: |
          MIN_COVERAGE=80
          COVERAGE_FILE=target/site/jacoco/jacoco.csv
          if [ ! -f "$COVERAGE_FILE" ]; then
            echo "Cobertura não gerada. Verifique sua configuração do Jacoco."
            exit 1
          fi
          LINE_COVERAGE=$(awk -F',' '/TOTAL/{print $4}' "$COVERAGE_FILE")
          if (( $(echo "$LINE_COVERAGE < $MIN_COVERAGE" | bc -l) )); then
            echo "A cobertura de teste está abaixo do limite mínimo de $MIN_COVERAGE%. Cobertura atual: $LINE_COVERAGE%"
            exit 1
          else
            echo "A cobertura da linha atende ao limite mínimo: $LINE_COVERAGE%"
          fi

      - name: Upload results to Codecov (Analise estática)
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_PROCESSAMENTO_TOKEN }}

      - name: Run Integration Tests
        run: mvn verify

      - name: Build Docker Image
        run: mvn package -Pnative

  push-docker-image:
    runs-on: ubuntu-latest
    needs: code-analisys
    if: github.event_name != 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to DockerHub
        run: docker login -u jacksoncarbonera -p ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
            docker build -t jacksoncarbonera/fiap-video-processamento .
            docker push jacksoncarbonera/fiap-video-processamento
